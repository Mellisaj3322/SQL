----------I created a table of 20 top movies with data sets of rating based on IMDB, the released dates ,and the budgets-------------------

CREATE TABLE top_movies (id INTEGER PRIMARY KEY AUTOINCREMENT, movie_name TEXT,rating INTEGER, released_date INTEGER,budget INTEGER);

INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Get Out", 7.7, 2017, 4500000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Pulp Fiction",8.9,1994,8500000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Knives Out",7.9,2019,40000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Titanic",7.9,1997,200000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("The Avengers",8.4,2019,356000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("The Avengers",8,2012,220000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Whiplash",8.5,2014,3300000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("The Dark Knight",9,2007,185000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Forrest Gump",8.8,1994,55000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("A Quiet Place",7.5,2018,17000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("A Silent of the Lambs",8.6,1991,19000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Pirates of the Carribean", 8.1,2003,140000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Pirates of the Carribean",7.3,2006,225000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Little Miss Sunshine", 7.8,2006,8000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Lost in Translation",7.7,2003,4000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Conjuring",7.5,2013,20000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Home Alone", 7.7,1990,18000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Cast Away", 7.8,2000,90000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Saving Private Ryan",8.8,1998,70000000);
INSERT INTO top_movies(movie_name,rating,released_date, budget) VALUES ("Inception",8.8,2010,160000000);

------Display all movies from top_movies table-----
SELECT * FROM top_movies;


-----Display the average rating of the whole movie list-----
SELECT AVG(rating) from top_movies;

-----Display the highest budget of the whole movie list-----
SELECT MAX(budget) from top_movies;

-----Display the earlist released date of the whole movie list------
SELECT MIN(released_date) from top_movies;

-----Display the movie names which their average ratings are above 8-------
 SELECT movie_name, avg(rating) AS avg_rating FROM top_movies GROUP BY movie_name
 HAVING avg_rating > 8;

 ----Display the movie names that have 2 movies or more from the whole movie list------
 SELECT movie_name FROM top_movies GROUP BY movie_name
 HAVING count(*) >= 2;
 
 ----Display the movie names with the results as a 5 star rating------
 SELECT movie_name,round(rating*0.5) AS five_star_rating,released_date FROM top_movies;
 
 
 ----Display the movie names with their budgets and catagorize them into movie budget levels-------
 SELECT movie_name,budget,
 CASE
        WHEN budget > 100000000 then "Very High budget movie"
        WHEN budget > 50000000  then "High budget movie"
        WHEN budget > 5000000 then "Mid budget movie"
        ELSE "Low budget movie"
        END AS "Top movie budget level" FROM top_movies
        GROUP  BY "movie_name";
        
        
-----Display the movie names where their released dates are later than 2012 and their ratings are above 8----       
SELECT movie_name FROM top_movies WHERE released_date >2012 AND rating >8;


----Display either the movie names where their ratings are less than 7.8 or their released dates are before 1999-----
SELECT movie_name FROM top_movies WHERE rating < 7.8 OR released_date < 1999;
 

